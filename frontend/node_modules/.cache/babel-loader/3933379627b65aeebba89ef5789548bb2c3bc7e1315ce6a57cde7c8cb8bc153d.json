{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-49b49cc2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"onUpdate:modelValue\", \"onInput\"];\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.cart, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"p\", null, _toDisplayString(item.product.name) + \" - \" + _toDisplayString(item.product.price) + \" x \" + _toDisplayString(item.quantity), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.quantity = $event,\n      onInput: $event => $setup.updateQuantity(index, item.quantity)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_1), [[_vModelText, item.quantity]]), _createElementVNode(\"button\", {\n      onClick: $event => $setup.removeFromCart(index)\n    }, \"Remove\", 8 /* PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"p\", null, \"Total: \" + _toDisplayString($setup.cartTotal), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$setup","cart","item","index","key","_createElementVNode","_toDisplayString","product","name","price","quantity","type","$event","onInput","updateQuantity","_hoisted_1","onClick","removeFromCart","_hoisted_2","cartTotal"],"sources":["E:\\Vue+Django\\bookshopFolder\\frontend\\src\\views\\CartView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-for=\"(item, index) in cart\" :key=\"index\">\r\n      <p>{{ item.product.name }} - {{ item.product.price }} x {{ item.quantity }}</p>\r\n      <input type=\"number\" v-model=\"item.quantity\" @input=\"updateQuantity(index, item.quantity)\">\r\n      <button @click=\"removeFromCart(index)\">Remove</button>\r\n    </div>\r\n    <p>Total: {{ cartTotal }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore();\r\n\r\nconst cart = store.state.cart;\r\nconst cartTotal = store.getters.cartTotal;\r\n\r\nconst removeFromCart = (index) => {\r\n  store.dispatch('removeFromCart', index);\r\n};\r\n\r\nconst updateQuantity = (index, quantity) => {\r\n  store.dispatch('updateQuantity', { index, quantity });\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* Estilos del cart-container y cart-total */\r\n.cart-container {\r\n  margin: 20px;\r\n}\r\n\r\n.cart-total {\r\n  margin-top: 20px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":";;mBAAA;mBAAA;;uBACEA,mBAAA,CAOM,e,kBANJA,mBAAA,CAIMC,SAAA,QANVC,WAAA,CAEiCC,MAAA,CAAAC,IAAI,EAFrC,CAEiBC,IAAI,EAAEC,KAAK;yBAAxBN,mBAAA,CAIM;MAJ8BO,GAAG,EAAED;IAAK,IAC5CE,mBAAA,CAA+E,WAAAC,gBAAA,CAAzEJ,IAAI,CAACK,OAAO,CAACC,IAAI,IAAG,KAAG,GAAAF,gBAAA,CAAGJ,IAAI,CAACK,OAAO,CAACE,KAAK,IAAG,KAAG,GAAAH,gBAAA,CAAGJ,IAAI,CAACQ,QAAQ,kB,gBACxEL,mBAAA,CAA2F;MAApFM,IAAI,EAAC,QAAQ;MAJ1B,uBAAAC,MAAA,IAIoCV,IAAI,CAACQ,QAAQ,GAAAE,MAAA;MAAGC,OAAK,EAAAD,MAAA,IAAEZ,MAAA,CAAAc,cAAc,CAACX,KAAK,EAAED,IAAI,CAACQ,QAAQ;6CAJ9FK,UAAA,I,cAIoCb,IAAI,CAACQ,QAAQ,E,GAC3CL,mBAAA,CAAsD;MAA7CW,OAAK,EAAAJ,MAAA,IAAEZ,MAAA,CAAAiB,cAAc,CAACd,KAAK;OAAG,QAAM,iBALnDe,UAAA,E;kCAOIb,mBAAA,CAA6B,WAA1B,SAAO,GAAAC,gBAAA,CAAGN,MAAA,CAAAmB,SAAS,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}