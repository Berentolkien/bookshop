{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    cartItems: [] // Aquí se almacenarán los productos del carrito\n  },\n  mutations: {\n    // Mutación para agregar un producto al carrito\n    addToCart(state, product) {\n      const existingProduct = state.cartItems.find(item => item.id === product.id);\n      if (existingProduct !== -1) {\n        state.cartItems[existingProductIndex].quantity += product.quantity;\n      } else {\n        state.cartItems.push(product);\n      }\n    },\n    removeFromCart(state, productId) {\n      const productIndex = state.cartItems.findIndex(item => item.id === productId);\n      if (productIndex !== -1) {\n        state.cartItems.splice(productIndex, 1);\n      }\n    },\n    // Mutación para actualizar la cantidad de un producto en el carrito\n    updateQuantity(state, {\n      productId,\n      quantity\n    }) {\n      const product = state.cartItems.find(item => item.id === productId);\n      if (product) {\n        product.quantity = quantity;\n      }\n    }\n  },\n  actions: {\n    // Acción para cargar los productos desde la API\n    async fetchProducts({\n      commit\n    }) {\n      try {\n        const response = await axios.get('http://localhost:8000/api/products');\n        commit('setProducts', response.data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    // Otras acciones para agregar, eliminar y actualizar productos en el carrito\n    addToCart({\n      commit\n    }, product) {\n      commit('addToCart', product);\n    },\n    removeFromCart({\n      commit\n    }, productId) {\n      commit('removeFromCart', productId);\n    },\n    updateQuantity({\n      commit\n    }, {\n      productId,\n      quantity\n    }) {\n      commit('updateQuantity', {\n        productId,\n        quantity\n      });\n    }\n  },\n  getters: {\n    // Getter para obtener los productos del carrito\n    cartItems(state) {\n      return state.cartItems;\n    },\n    // Getter para obtener el subtotal del carrito\n    subtotal(state) {\n      return state.cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n    }\n  }\n});","map":{"version":3,"names":["createStore","axios","state","cartItems","mutations","addToCart","product","existingProduct","find","item","id","existingProductIndex","quantity","push","removeFromCart","productId","productIndex","findIndex","splice","updateQuantity","actions","fetchProducts","commit","response","get","data","error","console","getters","subtotal","reduce","total","price"],"sources":["E:/Vue+Django/bookshopFolder/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\nimport axios from 'axios';\n\nexport default createStore({\n  state: {\n    cartItems: [], // Aquí se almacenarán los productos del carrito\n  },\n  mutations: {\n    // Mutación para agregar un producto al carrito\n    addToCart(state, product) {\n      const existingProduct = state.cartItems.find(item => item.id === product.id);\n      if (existingProduct !== -1) {\n        state.cartItems[existingProductIndex].quantity += product.quantity;\n      } else {\n        state.cartItems.push(product);\n      }\n    },\n    removeFromCart(state, productId) {\n      const productIndex = state.cartItems.findIndex(item => item.id === productId);\n      if (productIndex !== -1) {\n        state.cartItems.splice(productIndex, 1);\n      }\n    }, // Mutación para actualizar la cantidad de un producto en el carrito\n    updateQuantity(state, { productId, quantity }) {\n      const product = state.cartItems.find(item => item.id === productId);\n      if (product) {\n        product.quantity = quantity;\n      }\n    }\n  },\n  actions: {\n    // Acción para cargar los productos desde la API\n    async fetchProducts({ commit }) {\n      try {\n        const response = await axios.get('http://localhost:8000/api/products');\n        commit('setProducts', response.data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    // Otras acciones para agregar, eliminar y actualizar productos en el carrito\n    addToCart({ commit }, product) {\n      commit('addToCart', product);\n    },\n    removeFromCart({ commit }, productId) {\n      commit('removeFromCart', productId);\n    },\n    updateQuantity({ commit }, { productId, quantity }) {\n      commit('updateQuantity', { productId, quantity });\n    }\n  },\n  getters: {\n    // Getter para obtener los productos del carrito\n    cartItems(state) {\n      return state.cartItems;\n    },\n    // Getter para obtener el subtotal del carrito\n    subtotal(state) {\n      return state.cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\n    }\n  },\n});"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,SAAS,EAAE,EAAE,CAAE;EACjB,CAAC;EACDC,SAAS,EAAE;IACT;IACAC,SAASA,CAACH,KAAK,EAAEI,OAAO,EAAE;MACxB,MAAMC,eAAe,GAAGL,KAAK,CAACC,SAAS,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MAC5E,IAAIH,eAAe,KAAK,CAAC,CAAC,EAAE;QAC1BL,KAAK,CAACC,SAAS,CAACQ,oBAAoB,CAAC,CAACC,QAAQ,IAAIN,OAAO,CAACM,QAAQ;MACpE,CAAC,MAAM;QACLV,KAAK,CAACC,SAAS,CAACU,IAAI,CAACP,OAAO,CAAC;MAC/B;IACF,CAAC;IACDQ,cAAcA,CAACZ,KAAK,EAAEa,SAAS,EAAE;MAC/B,MAAMC,YAAY,GAAGd,KAAK,CAACC,SAAS,CAACc,SAAS,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKK,SAAS,CAAC;MAC7E,IAAIC,YAAY,KAAK,CAAC,CAAC,EAAE;QACvBd,KAAK,CAACC,SAAS,CAACe,MAAM,CAACF,YAAY,EAAE,CAAC,CAAC;MACzC;IACF,CAAC;IAAE;IACHG,cAAcA,CAACjB,KAAK,EAAE;MAAEa,SAAS;MAAEH;IAAS,CAAC,EAAE;MAC7C,MAAMN,OAAO,GAAGJ,KAAK,CAACC,SAAS,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKK,SAAS,CAAC;MACnE,IAAIT,OAAO,EAAE;QACXA,OAAO,CAACM,QAAQ,GAAGA,QAAQ;MAC7B;IACF;EACF,CAAC;EACDQ,OAAO,EAAE;IACP;IACA,MAAMC,aAAaA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,oCAAoC,CAAC;QACtEF,MAAM,CAAC,aAAa,EAAEC,QAAQ,CAACE,IAAI,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACD;IACArB,SAASA,CAAC;MAAEiB;IAAO,CAAC,EAAEhB,OAAO,EAAE;MAC7BgB,MAAM,CAAC,WAAW,EAAEhB,OAAO,CAAC;IAC9B,CAAC;IACDQ,cAAcA,CAAC;MAAEQ;IAAO,CAAC,EAAEP,SAAS,EAAE;MACpCO,MAAM,CAAC,gBAAgB,EAAEP,SAAS,CAAC;IACrC,CAAC;IACDI,cAAcA,CAAC;MAAEG;IAAO,CAAC,EAAE;MAAEP,SAAS;MAAEH;IAAS,CAAC,EAAE;MAClDU,MAAM,CAAC,gBAAgB,EAAE;QAAEP,SAAS;QAAEH;MAAS,CAAC,CAAC;IACnD;EACF,CAAC;EACDgB,OAAO,EAAE;IACP;IACAzB,SAASA,CAACD,KAAK,EAAE;MACf,OAAOA,KAAK,CAACC,SAAS;IACxB,CAAC;IACD;IACA0B,QAAQA,CAAC3B,KAAK,EAAE;MACd,OAAOA,KAAK,CAACC,SAAS,CAAC2B,MAAM,CAAC,CAACC,KAAK,EAAEtB,IAAI,KAAKsB,KAAK,GAAItB,IAAI,CAACuB,KAAK,GAAGvB,IAAI,CAACG,QAAS,EAAE,CAAC,CAAC;IACzF;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}