{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-49b49cc2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(\" < \"), _createElementVNode(\"div\", null, [$setup.cartItems.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Your cart is empty\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.cartItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id\n    }, [_createVNode($setup[\"CartItem\"], {\n      product: item\n    }, null, 8 /* PROPS */, [\"product\"])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", null, \"Total: $\" + _toDisplayString($setup.total), 1 /* TEXT */)]))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","_createElementBlock","_Fragment","_createTextVNode","_createElementVNode","$setup","cartItems","length","_hoisted_1","_hoisted_2","_renderList","item","id","_createVNode","product","_toDisplayString","total"],"sources":["E:\\Vue+Django\\bookshopFolder\\frontend\\src\\views\\CartView.vue"],"sourcesContent":["<template>\r\n  <\r\n  <div>\r\n    <div v-if=\"cartItems.length === 0\">Your cart is empty</div>\r\n    <div v-else>\r\n      <div v-for=\"item in cartItems\" :key=\"item.id\">\r\n        <CartItem :product=\"item\" />\r\n      </div>\r\n      <div>Total: ${{ total }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from 'vuex';\r\nimport { computed } from 'vue';\r\nimport CartItem from './CartItem.vue';\r\n\r\nconst store = useStore();\r\nconst cartItems = store.state.cart.cartItems;\r\n\r\n// Definir la propiedad computada para calcular el total del carrito\r\nconst total = computed(() => {\r\n  return cartItems.reduce((acc, item) => {\r\n    return acc + (item.price * item.quantity);\r\n  }, 0);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.cart-container {\r\n  margin: 20px;\r\n}\r\n\r\n.cart-total {\r\n  margin-top: 20px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":";;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBAAAC,mBAAA,CAAAC,SAAA,SAAAC,gBAAA,CAAU,KAER,GAAAC,mBAAA,CAQM,cAPOC,MAAA,CAAAC,SAAS,CAACC,MAAM,U,cAA3BN,mBAAA,CAA2D,OAH/DO,UAAA,EAGuC,oBAAkB,M,cACrDP,mBAAA,CAKM,OATVQ,UAAA,I,kBAKMR,mBAAA,CAEMC,SAAA,QAPZQ,WAAA,CAK0BL,MAAA,CAAAC,SAAS,EAAjBK,IAAI;yBAAhBV,mBAAA,CAEM;MAF0BD,GAAG,EAAEW,IAAI,CAACC;QACxCC,YAAA,CAA4BR,MAAA;MAAjBS,OAAO,EAAEH;IAAI,qC;kCAE1BP,mBAAA,CAA8B,aAAzB,UAAQ,GAAAW,gBAAA,CAAGV,MAAA,CAAAW,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}