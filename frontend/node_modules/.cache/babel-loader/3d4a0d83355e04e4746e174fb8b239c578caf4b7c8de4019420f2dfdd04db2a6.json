{"ast":null,"code":"import NavBar from '@/components/NavBar.vue';\nimport { ref, onMounted } from 'vue';\nexport default {\n  __name: 'CategoriesView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const categories = ref([]);\n    onMounted(async () => {\n      try {\n        const response = await fetch('http://tu-api-url.com/api/categories/');\n        const data = await response.json();\n        categories.value = data;\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    });\n    const __returned__ = {\n      categories,\n      NavBar,\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["NavBar","ref","onMounted","categories","response","fetch","data","json","value","error","console"],"sources":["E:/Vue+Django/bookshopFolder/frontend/src/views/CategoriesView.vue"],"sourcesContent":["<template>\n  <NavBar />\n  <div>\n    <h2>Categories</h2>\n    <ul>\n      <li v-for=\"category in categories\" :key=\"category.id\">\n        {{ category.name }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script setup>\nimport NavBar from '@/components/NavBar.vue';\nimport { ref, onMounted } from 'vue';\n\nconst categories = ref([]);\n\nonMounted(async () => {\n  try {\n    const response = await fetch('http://tu-api-url.com/api/categories/');\n    const data = await response.json();\n    categories.value = data;\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n  }\n});\n\n</script>\n"],"mappings":"AAaA,OAAOA,MAAM,MAAM,yBAAyB;AAC5C,SAASC,GAAG,EAAEC,SAAS,QAAQ,KAAK;;;;;;;IAEpC,MAAMC,UAAU,GAAGF,GAAG,CAAC,EAAE,CAAC;IAE1BC,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;QACrE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCJ,UAAU,CAACK,KAAK,GAAGF,IAAI;MACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}