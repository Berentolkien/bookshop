{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nconst state = {\n  cartItems: ref([]) // Lista de productos en el carrito\n};\nconst mutations = {\n  // Agregar un producto al carrito\n  addToCart(state, product) {\n    state.cartItems.push(product);\n  },\n  // Eliminar un producto del carrito\n  removeFromCart(state, productId) {\n    state.cartItems = state.cartItems.filter(item => item.id !== productId);\n  },\n  // Actualizar la cantidad de un producto en el carrito\n  updateQuantity(state, {\n    productId,\n    quantity\n  }) {\n    const productIndex = state.cartItems.findIndex(item => item.id === productId);\n    if (productIndex !== -1) {\n      state.cartItems[productIndex].quantity = quantity;\n    }\n  }\n};\nconst actions = {\n  // Acción para agregar un producto al carrito\n  addToCart({\n    commit\n  }, product) {\n    commit('addToCart', product);\n  },\n  // Acción para eliminar un producto del carrito\n  removeFromCart({\n    commit\n  }, productId) {\n    commit('removeFromCart', productId);\n  },\n  // Acción para actualizar la cantidad de un producto en el carrito\n  updateQuantity({\n    commit\n  }, {\n    productId,\n    quantity\n  }) {\n    commit('updateQuantity', {\n      productId,\n      quantity\n    });\n  }\n};\nconst getters = {\n  // Obtener todos los productos en el carrito\n  cartItems(state) {\n    return state.cartItems; // Devolver los productos del carrito\n  },\n  // Obtener la cantidad total de productos en el carrito\n  totalQuantity: state => state.cartItems.reduce((total, item) => total + item.quantity, 0),\n  // Obtener el subtotal del carrito\n  subtotal: state => state.cartItems.reduce((total, item) => total + item.price * item.quantity, 0)\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["ref","state","cartItems","mutations","addToCart","product","push","removeFromCart","productId","filter","item","id","updateQuantity","quantity","productIndex","findIndex","actions","commit","getters","totalQuantity","reduce","total","subtotal","price"],"sources":["E:/Vue+Django/bookshopFolder/frontend/src/store/cart.js"],"sourcesContent":["import { ref } from 'vue';\r\n\r\nconst state = {\r\n  cartItems: ref([]) // Lista de productos en el carrito\r\n};\r\n\r\nconst mutations = {\r\n  // Agregar un producto al carrito\r\n  addToCart(state, product) {\r\n    state.cartItems.push(product);\r\n  },\r\n  // Eliminar un producto del carrito\r\n  removeFromCart(state, productId) {\r\n    state.cartItems = state.cartItems.filter(item => item.id !== productId);\r\n  },\r\n  // Actualizar la cantidad de un producto en el carrito\r\n  updateQuantity(state, { productId, quantity }) {\r\n    const productIndex = state.cartItems.findIndex(item => item.id === productId);\r\n    if (productIndex !== -1) {\r\n      state.cartItems[productIndex].quantity = quantity;\r\n    }\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  // Acción para agregar un producto al carrito\r\n  addToCart({ commit }, product) {\r\n    commit('addToCart', product);\r\n  },\r\n  // Acción para eliminar un producto del carrito\r\n  removeFromCart({ commit }, productId) {\r\n    commit('removeFromCart', productId);\r\n  },\r\n  // Acción para actualizar la cantidad de un producto en el carrito\r\n  updateQuantity({ commit }, { productId, quantity }) {\r\n    commit('updateQuantity', { productId, quantity });\r\n  }\r\n};\r\n\r\nconst getters = {\r\n  // Obtener todos los productos en el carrito\r\n  cartItems(state) {\r\n    return state.cartItems; // Devolver los productos del carrito\r\n  },\r\n  // Obtener la cantidad total de productos en el carrito\r\n  totalQuantity: state => state.cartItems.reduce((total, item) => total + item.quantity, 0),\r\n  // Obtener el subtotal del carrito\r\n  subtotal: state => state.cartItems.reduce((total, item) => total + (item.price * item.quantity), 0)\r\n};\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters\r\n};\r\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,KAAK;AAEzB,MAAMC,KAAK,GAAG;EACZC,SAAS,EAAEF,GAAG,CAAC,EAAE,CAAC,CAAC;AACrB,CAAC;AAED,MAAMG,SAAS,GAAG;EAChB;EACAC,SAASA,CAACH,KAAK,EAAEI,OAAO,EAAE;IACxBJ,KAAK,CAACC,SAAS,CAACI,IAAI,CAACD,OAAO,CAAC;EAC/B,CAAC;EACD;EACAE,cAAcA,CAACN,KAAK,EAAEO,SAAS,EAAE;IAC/BP,KAAK,CAACC,SAAS,GAAGD,KAAK,CAACC,SAAS,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,SAAS,CAAC;EACzE,CAAC;EACD;EACAI,cAAcA,CAACX,KAAK,EAAE;IAAEO,SAAS;IAAEK;EAAS,CAAC,EAAE;IAC7C,MAAMC,YAAY,GAAGb,KAAK,CAACC,SAAS,CAACa,SAAS,CAACL,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,SAAS,CAAC;IAC7E,IAAIM,YAAY,KAAK,CAAC,CAAC,EAAE;MACvBb,KAAK,CAACC,SAAS,CAACY,YAAY,CAAC,CAACD,QAAQ,GAAGA,QAAQ;IACnD;EACF;AACF,CAAC;AAED,MAAMG,OAAO,GAAG;EACd;EACAZ,SAASA,CAAC;IAAEa;EAAO,CAAC,EAAEZ,OAAO,EAAE;IAC7BY,MAAM,CAAC,WAAW,EAAEZ,OAAO,CAAC;EAC9B,CAAC;EACD;EACAE,cAAcA,CAAC;IAAEU;EAAO,CAAC,EAAET,SAAS,EAAE;IACpCS,MAAM,CAAC,gBAAgB,EAAET,SAAS,CAAC;EACrC,CAAC;EACD;EACAI,cAAcA,CAAC;IAAEK;EAAO,CAAC,EAAE;IAAET,SAAS;IAAEK;EAAS,CAAC,EAAE;IAClDI,MAAM,CAAC,gBAAgB,EAAE;MAAET,SAAS;MAAEK;IAAS,CAAC,CAAC;EACnD;AACF,CAAC;AAED,MAAMK,OAAO,GAAG;EACd;EACAhB,SAASA,CAACD,KAAK,EAAE;IACf,OAAOA,KAAK,CAACC,SAAS,CAAC,CAAC;EAC1B,CAAC;EACD;EACAiB,aAAa,EAAElB,KAAK,IAAIA,KAAK,CAACC,SAAS,CAACkB,MAAM,CAAC,CAACC,KAAK,EAAEX,IAAI,KAAKW,KAAK,GAAGX,IAAI,CAACG,QAAQ,EAAE,CAAC,CAAC;EACzF;EACAS,QAAQ,EAAErB,KAAK,IAAIA,KAAK,CAACC,SAAS,CAACkB,MAAM,CAAC,CAACC,KAAK,EAAEX,IAAI,KAAKW,KAAK,GAAIX,IAAI,CAACa,KAAK,GAAGb,IAAI,CAACG,QAAS,EAAE,CAAC;AACpG,CAAC;AAED,eAAe;EACbZ,KAAK;EACLE,SAAS;EACTa,OAAO;EACPE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}