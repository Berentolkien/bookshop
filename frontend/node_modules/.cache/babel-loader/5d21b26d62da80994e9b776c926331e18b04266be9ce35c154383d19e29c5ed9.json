{"ast":null,"code":"import { ref } from 'vue';\nimport { useStore } from 'vuex'; // Importa el store de Vuex\n\nexport default {\n  __name: 'CartView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n\n    // Define los datos del carrito obtenidos del store de Vuex\n    const cartItems = ref([]);\n    const cartTotal = ref(0);\n\n    // Método para obtener los datos del carrito del store de Vuex\n    const fetchCartItems = () => {\n      cartItems.value = store.state.cart.items;\n      cartTotal.value = store.state.cart.total;\n    };\n\n    // Método para eliminar un producto del carrito\n    const removeItem = itemId => {\n      store.dispatch('cart/removeItem', itemId);\n    };\n\n    // Método para proceder al checkout\n    const checkout = () => {\n      // Implementar lógica para procesar el checkout\n    };\n\n    // Obtener los datos del carrito cuando se monta el componente\n    fetchCartItems();\n    const __returned__ = {\n      store,\n      cartItems,\n      cartTotal,\n      fetchCartItems,\n      removeItem,\n      checkout,\n      ref,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useStore","store","cartItems","cartTotal","fetchCartItems","value","state","cart","items","total","removeItem","itemId","dispatch","checkout"],"sources":["E:/Vue+Django/bookshopFolder/frontend/src/views/CartView.vue"],"sourcesContent":["<template>\r\n<\r\n    <div class=\"cart-container\">\r\n      <h2>Shopping Cart</h2>\r\n      <div v-if=\"cartItems.length === 0\">\r\n        <p>Your cart is empty.</p>\r\n      </div>\r\n      <div v-else>\r\n        <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"cart-item\">\r\n          <img :src=\"item.image\" alt=\"Product Image\">\r\n          <div class=\"item-details\">\r\n            <h3>{{ item.name }}</h3>\r\n            <p>Price: {{ item.price }}</p>\r\n            <p>Quantity: {{ item.quantity }}</p>\r\n            <button @click=\"removeItem(item.id)\">Remove</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"cart-total\">\r\n          <p>Total: {{ cartTotal }}</p>\r\n          <button @click=\"checkout\">Checkout</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref } from 'vue';\r\n  import { useStore } from 'vuex'; // Importa el store de Vuex\r\n  \r\n  const store = useStore();\r\n  \r\n  // Define los datos del carrito obtenidos del store de Vuex\r\n  const cartItems = ref([]);\r\n  const cartTotal = ref(0);\r\n  \r\n  // Método para obtener los datos del carrito del store de Vuex\r\n  const fetchCartItems = () => {\r\n    cartItems.value = store.state.cart.items;\r\n    cartTotal.value = store.state.cart.total;\r\n  };\r\n  \r\n  // Método para eliminar un producto del carrito\r\n  const removeItem = (itemId) => {\r\n    store.dispatch('cart/removeItem', itemId);\r\n  };\r\n  \r\n  // Método para proceder al checkout\r\n  const checkout = () => {\r\n    // Implementar lógica para procesar el checkout\r\n  };\r\n  \r\n  // Obtener los datos del carrito cuando se monta el componente\r\n  fetchCartItems();\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Estilos CSS para el componente CartView */\r\n  .cart-container {\r\n    /* Estilos del contenedor del carrito */\r\n  }\r\n  \r\n  .cart-item {\r\n    /* Estilos de cada ítem del carrito */\r\n  }\r\n  \r\n  .cart-total {\r\n    /* Estilos del total del carrito */\r\n  }\r\n  </style>\r\n  "],"mappings":"AA0BE,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,QAAQ,QAAQ,MAAM,CAAC,CAAC;;;;;;;;IAEjC,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;;IAExB;IACA,MAAME,SAAS,GAAGH,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMI,SAAS,GAAGJ,GAAG,CAAC,CAAC,CAAC;;IAExB;IACA,MAAMK,cAAc,GAAGA,CAAA,KAAM;MAC3BF,SAAS,CAACG,KAAK,GAAGJ,KAAK,CAACK,KAAK,CAACC,IAAI,CAACC,KAAK;MACxCL,SAAS,CAACE,KAAK,GAAGJ,KAAK,CAACK,KAAK,CAACC,IAAI,CAACE,KAAK;IAC1C,CAAC;;IAED;IACA,MAAMC,UAAU,GAAIC,MAAM,IAAK;MAC7BV,KAAK,CAACW,QAAQ,CAAC,iBAAiB,EAAED,MAAM,CAAC;IAC3C,CAAC;;IAED;IACA,MAAME,QAAQ,GAAGA,CAAA,KAAM;MACrB;IAAA,CACD;;IAED;IACAT,cAAc,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}