{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    cart: [] // Aquí se almacenarán los productos del carrito\n  },\n  mutations: {\n    // Las mutaciones son funciones que modifican el estado\n    addToCart(state, product) {\n      state.cart.push(product);\n    },\n    removeFromCart(state, productId) {\n      state.cart = state.cart.filter(item => item.id !== productId);\n    },\n    updateQuantity(state, {\n      productId,\n      quantity\n    }) {\n      const productIndex = state.cart.findIndex(item => item.id === productId);\n      if (productIndex !== -1) {\n        state.cart[productIndex].quantity = quantity;\n      }\n    }\n    // Otras mutaciones para eliminar productos, actualizar cantidades, etc.\n  },\n  actions: {\n    // Las acciones son funciones que llaman a las mutaciones\n    addToCart(context, product) {\n      context.commit('addToCart', product);\n    }\n    // Otras acciones para eliminar productos, actualizar cantidades, etc.\n  },\n  getters: {\n    // Los getters son funciones que devuelven parte del estado\n    cartItems(state) {\n      return state.cart;\n    },\n    // Obtener la cantidad total de productos en el carrito\n    totalQuantity(state) {\n      return state.cart.reduce((total, item) => total + item.quantity, 0);\n    },\n    // Obtener el subtotal del carrito\n    subtotal(state) {\n      return state.cart.reduce((total, item) => total + item.price * item.quantity, 0);\n    }\n    // Otros getters para obtener la cantidad total de productos en el carrito, el subtotal, etc.\n  }\n});","map":{"version":3,"names":["createStore","state","cart","mutations","addToCart","product","push","removeFromCart","productId","filter","item","id","updateQuantity","quantity","productIndex","findIndex","actions","context","commit","getters","cartItems","totalQuantity","reduce","total","subtotal","price"],"sources":["E:/Vue+Django/bookshopFolder/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\n\n\nexport default createStore({\n  state: {\n    cart: [], // Aquí se almacenarán los productos del carrito\n  },\n  mutations: {\n    // Las mutaciones son funciones que modifican el estado\n    addToCart(state, product) {\n      state.cart.push(product);\n    },\n    removeFromCart(state, productId) {\n      state.cart = state.cart.filter(item => item.id !== productId);\n    },\n    updateQuantity(state, { productId, quantity }) {\n      const productIndex = state.cart.findIndex(item => item.id === productId);\n      if (productIndex !== -1) {\n        state.cart[productIndex].quantity = quantity;\n      }\n    }\n    // Otras mutaciones para eliminar productos, actualizar cantidades, etc.\n  },\n  actions: {\n    // Las acciones son funciones que llaman a las mutaciones\n    addToCart(context, product) {\n      context.commit('addToCart', product);\n    },\n    // Otras acciones para eliminar productos, actualizar cantidades, etc.\n  },\n  getters: {\n    // Los getters son funciones que devuelven parte del estado\n    cartItems(state) {\n      return state.cart;\n    },\n    // Obtener la cantidad total de productos en el carrito\n    totalQuantity(state) {\n      return state.cart.reduce((total, item) => total + item.quantity, 0);\n    },\n    // Obtener el subtotal del carrito\n    subtotal(state) {\n      return state.cart.reduce((total, item) => total + (item.price * item.quantity), 0);\n    },\n    // Otros getters para obtener la cantidad total de productos en el carrito, el subtotal, etc.\n  },\n});\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAGlC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAE,EAAE,CAAE;EACZ,CAAC;EACDC,SAAS,EAAE;IACT;IACAC,SAASA,CAACH,KAAK,EAAEI,OAAO,EAAE;MACxBJ,KAAK,CAACC,IAAI,CAACI,IAAI,CAACD,OAAO,CAAC;IAC1B,CAAC;IACDE,cAAcA,CAACN,KAAK,EAAEO,SAAS,EAAE;MAC/BP,KAAK,CAACC,IAAI,GAAGD,KAAK,CAACC,IAAI,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,SAAS,CAAC;IAC/D,CAAC;IACDI,cAAcA,CAACX,KAAK,EAAE;MAAEO,SAAS;MAAEK;IAAS,CAAC,EAAE;MAC7C,MAAMC,YAAY,GAAGb,KAAK,CAACC,IAAI,CAACa,SAAS,CAACL,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,SAAS,CAAC;MACxE,IAAIM,YAAY,KAAK,CAAC,CAAC,EAAE;QACvBb,KAAK,CAACC,IAAI,CAACY,YAAY,CAAC,CAACD,QAAQ,GAAGA,QAAQ;MAC9C;IACF;IACA;EACF,CAAC;EACDG,OAAO,EAAE;IACP;IACAZ,SAASA,CAACa,OAAO,EAAEZ,OAAO,EAAE;MAC1BY,OAAO,CAACC,MAAM,CAAC,WAAW,EAAEb,OAAO,CAAC;IACtC;IACA;EACF,CAAC;EACDc,OAAO,EAAE;IACP;IACAC,SAASA,CAACnB,KAAK,EAAE;MACf,OAAOA,KAAK,CAACC,IAAI;IACnB,CAAC;IACD;IACAmB,aAAaA,CAACpB,KAAK,EAAE;MACnB,OAAOA,KAAK,CAACC,IAAI,CAACoB,MAAM,CAAC,CAACC,KAAK,EAAEb,IAAI,KAAKa,KAAK,GAAGb,IAAI,CAACG,QAAQ,EAAE,CAAC,CAAC;IACrE,CAAC;IACD;IACAW,QAAQA,CAACvB,KAAK,EAAE;MACd,OAAOA,KAAK,CAACC,IAAI,CAACoB,MAAM,CAAC,CAACC,KAAK,EAAEb,IAAI,KAAKa,KAAK,GAAIb,IAAI,CAACe,KAAK,GAAGf,IAAI,CAACG,QAAS,EAAE,CAAC,CAAC;IACpF;IACA;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}