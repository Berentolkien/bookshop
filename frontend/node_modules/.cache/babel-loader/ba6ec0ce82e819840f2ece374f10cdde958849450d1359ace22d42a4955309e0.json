{"ast":null,"code":"import { createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Categories\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"NavBar\"]), _createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categories, category => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: category.id\n    }, _toDisplayString(category.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_createVNode","$setup","_hoisted_1","_renderList","categories","category","key","id","name"],"sources":["E:\\Vue+Django\\bookshopFolder\\frontend\\src\\views\\CategoriesView.vue"],"sourcesContent":["<template>\n  <NavBar />\n  <div>\n    <h2>Categories</h2>\n    <ul>\n      <li v-for=\"category in categories\" :key=\"category.id\">\n        {{ category.name }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script setup>\nimport NavBar from '@/components/NavBar.vue';\nimport { ref, onMounted } from 'vue';\n\nconst categories = ref([]);\n\nonMounted(async () => {\n  try {\n    const response = await fetch('http://tu-api-url.com/api/categories/');\n    const data = await response.json();\n    categories.value = data;\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n  }\n});\n\n</script>\n"],"mappings":";gCAGIA,mBAAA,CAAmB,YAAf,YAAU;;uBAHlBC,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAUC,MAAA,aACVJ,mBAAA,CAOM,cANJK,UAAmB,EACnBL,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKC,SAAA,QAPXI,WAAA,CAK6BF,MAAA,CAAAG,UAAU,EAAtBC,QAAQ;yBAAnBP,mBAAA,CAEK;MAF+BQ,GAAG,EAAED,QAAQ,CAACE;wBAC7CF,QAAQ,CAACG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}